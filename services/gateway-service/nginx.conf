worker_processes 1; # Adjust based on your server's core count

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    keepalive_timeout  65;

    # Define upstreams for our services
    # The names (auth_service, content_service, suggestion_service)
    # will match the service names in docker-compose.yml
    # The ports are the EXPOSED ports within the service containers.

    upstream auth_service {
        server auth-service:8000; # auth-service is the Docker Compose service name, 8000 is its internal port
    }

    upstream content_service {
        server content-service:8000; # content-service is the Docker Compose service name
    }

    upstream suggestion_service {
        server suggestion-service:8000; # suggestion-service is the Docker Compose service name
    }

    upstream frontend_service {
        server frontend:80; # frontend is the Docker Compose service name for the React app served by Nginx
    }

    server {
        listen 80; # Gateway listens on port 80

        # Serve frontend application by default
        location / {
            proxy_pass http://frontend_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route requests to Auth Service
        location /api/auth/ {
            proxy_pass http://auth_service/; # Note the trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Optional: Basic Auth forwarding or JWT handling can be added here if needed
            # proxy_set_header Authorization $http_authorization;
            # proxy_pass_header  Authorization;

            # Strip the /api/auth prefix before forwarding
            rewrite ^/api/auth/(.*)$ /$1 break;
        }

        # Route requests to Content Service
        location /api/content/ {
            proxy_pass http://content_service/; # Note the trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/api/content/(.*)$ /$1 break;
        }

        # Route requests to Suggestion Service
        location /api/suggestions/ {
            proxy_pass http://suggestion_service/; # Note the trailing slash
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            rewrite ^/api/suggestions/(.*)$ /$1 break;
        }

        # Add other common Nginx settings like Gzip, client_max_body_size etc. if needed
        # gzip on;
        # client_max_body_size 10M;

        # Handling for static assets if frontend is served via Nginx directly from gateway
        # location /static/ {
        #    alias /usr/share/nginx/html/static/; # Example, adjust if your frontend build structure is different
        # }

        # location /sockjs-node/ { # For react dev server HMR, if accessing directly
        #    proxy_pass http://frontend_service;
        #    proxy_http_version 1.1;
        #    proxy_set_header Upgrade $http_upgrade;
        #    proxy_set_header Connection "upgrade";
        # }
    }
}
